name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: controle_financeiro_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run type checking
        run: npm run type-check

      - name: Run linting (web only for now)
        run: npm run lint -- --filter=@controle-financeiro/web

      - name: Run tests
        run: npm run test
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/controle_financeiro_test
          JWT_SECRET: test-jwt-secret-key-min-32-chars
          ENCRYPTION_KEY: test-encryption-key-32-chars

      # Coverage/Codecov can be re-enabled once tests are in place across packages

  # e2e job disabled for now; re-enable when app and e2e tests exist
  # e2e:
  #   runs-on: ubuntu-latest
  #   steps: []

  # security job disabled temporarily to avoid failing the pipeline on initial scaffold
  # security:
  #   runs-on: ubuntu-latest
  #   steps: []

  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build packages
        run: npm run build

      - name: Build web app
        run: cd apps/web && npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            packages/*/dist
            apps/web/.next
